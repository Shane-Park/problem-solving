package shane.leetcode.contest.weekly.w298;

import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class Q2311LongestBinarySubsequenceLessThanOrEqualToK {

    @Test
    public void test() {
        assertThat(longestSubsequence
                , 1)).isEqualTo(1000);
        assertThat(longestSubsequence("0001", 0)).isEqualTo(3);
        assertThat(longestSubsequence("101100011000010101011100011111111001011101000101000010001100101110010010011000100010001110011111000100100101110000100010010010100010"
                , 978095074)).isEqualTo(84);
        assertThat(longestSubsequence("1001011100000010111111110011000100011101100110100001001100110110001111000110111011010110000", 205790338)).isEqualTo(59);
        assertThat(longestSubsequence("0", 583196182)).isEqualTo(1);
        assertThat(longestSubsequence("111100010000011101001110001111000000001011101111111110111000011111011000010101110100110110001111001001011001010011010000011111101001101000000101101001110110000111101011000101"
                , 11713332)).isEqualTo(96);
        assertThat(longestSubsequence("1001010", 5)).isEqualTo(5);
        assertThat(longestSubsequence("0111101", 518459120)).isEqualTo(7);
        assertThat(longestSubsequence("00101001", 1)).isEqualTo(6);
    }

    public int longestSubsequence(String s, int k) {
        StringBuilder sb = new StringBuilder(s);
        int trim = 0;

        while (sb.length() > 0 && (sb.length() >= 32 || Integer.valueOf(sb.toString(), 2) > k)) {
            int indexOfOne = sb.indexOf("1");
            if (indexOfOne < 0)
                break;

            sb.deleteCharAt(indexOfOne);
            while (sb.length() > 0 && sb.charAt(0) == '0') {
                trim++;
                sb.deleteCharAt(0);
            }
        }

        return sb.length() + trim;
    }

}
